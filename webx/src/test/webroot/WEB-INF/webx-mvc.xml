<?xml version="1.0" encoding="UTF-8"?>
<webx-config>
    <!-- 扫描基础包，必须配置，框架会自动扫描Controller注解类 -->
    <property name="basePackage">cloud.apposs.webx.sample</property>
    
    <!-- 框架过滤不拦截的URL -->
    <property name="excludeUrlPattern">/js/**, /css/**</property>
    <!-- 框架过滤不拦截的HTTP REQUEST METHOD -->
    <property name="excludeMethod">OPTIONS</property>
    
    <!--
        * 开发模式，不同的开发模式下逻辑或者日志输出级别可能不同，由各业务方定义
        * 0、线上模式，即实际生产环境
        * 2、本地开发模式
        * 3、预览模式，即部署环境
    -->
    <property name="devMode">1</property>
    
    <!-- Web项目输入输出编码 -->
    <property name="charset">utf-8</property>

    <!-- JSP页面路径配置相关 -->
    <!-- 制定JSP页面存放的路径 -->
    <property name="urlPrefix">/pages/</property>
    <!-- 制定JSP文件页面的后缀 -->
    <property name="urlSuffix">.jsp</property>
    <!-- 文件上传最大字节数，默认为10M -->
    <property name="maxUploadFileSize">10485760</property>
    
    <!-- 网络连接池配置 -->
    <!-- 是否使用网络连接池，不使用则采用每次都是创建网络连接 -->
    <property name="useClientPooled">true</property>
    <!-- 网络连接池连接句柄最小/最大配置 -->
    <property name="coreClientPoolSize">64</property>
    <property name="maxClientPoolSize">2147483647</property>
    
    <!-- 是否开启权限注解拦截验证 -->
    <property name="authDriven">true</property>
    <!-- 是否启用框架内部管理监听 -->
    <property name="managementEnable">true</property>

    <!-- 异步HTTP请求组件 -->
    <okhttp>
        <!-- 是否开启OkHttp异步请求注入 -->
        <property name="enable">true</property>
        <!-- 异步轮询器数量 -->
        <property name="loopSize">6</property>
        <!-- HTTP连接池大小，<=0则不使用连接池 -->
        <property name="poolConnections">12</property>
        <!-- 异步HTTP请求的服务发现类型，有QConf/Zookeeper/File -->
        <property name="discoveryType">File</property>
        <property name="discoveryArgs">
            <value>E:/Backup/zookeeper.conf</value>
        </property>
        <!-- 指定ServiceId的负载均衡规则 -->
        <property name="balancer">
            <!-- 指定serviceid为socks_proxy的请求代理策略 -->
            <value key="socks_proxy">
                <!-- 负载均衡模式 -->
                <property name="rule">RoundRobin</property>
                <!-- 线路检测模式 -->
                <property name="ping">NoPing</property>
            </value>
            <!-- 指定serviceid为wxapi_proxy的请求代理策略 -->
            <value key="wxapi_proxy">
                <property name="rule">RoundRobin</property>
                <property name="ping">NoPing</property>
            </value>
        </property>
    </okhttp>
</webx-config>